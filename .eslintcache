[{"/Users/lalitkumar/code/user/src/index.js":"1","/Users/lalitkumar/code/user/src/App.js":"2","/Users/lalitkumar/code/user/src/store/auth-context.js":"3","/Users/lalitkumar/code/user/src/components/Login/Login.js":"4","/Users/lalitkumar/code/user/src/components/MainHeader/MainHeader.js":"5","/Users/lalitkumar/code/user/src/components/Home/Home.js":"6","/Users/lalitkumar/code/user/src/components/MainHeader/Navigation.js":"7","/Users/lalitkumar/code/user/src/components/UI/Card/Card.js":"8","/Users/lalitkumar/code/user/src/components/UI/Button/Button.js":"9"},{"size":308,"mtime":1651871900664,"results":"10","hashOfConfig":"11"},{"size":481,"mtime":1651873443489,"results":"12","hashOfConfig":"11"},{"size":901,"mtime":1651873825718,"results":"13","hashOfConfig":"11"},{"size":3870,"mtime":1651873544913,"results":"14","hashOfConfig":"11"},{"size":307,"mtime":1651805066728,"results":"15","hashOfConfig":"11"},{"size":453,"mtime":1651873482449,"results":"16","hashOfConfig":"11"},{"size":803,"mtime":1651805042759,"results":"17","hashOfConfig":"11"},{"size":218,"mtime":1616593928000,"results":"18","hashOfConfig":"11"},{"size":353,"mtime":1616593928000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qxl4fj",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lalitkumar/code/user/src/index.js",[],"/Users/lalitkumar/code/user/src/App.js",[],"/Users/lalitkumar/code/user/src/store/auth-context.js",[],"/Users/lalitkumar/code/user/src/components/Login/Login.js",["39","40","41","42"],"import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nconst emailReducer = (state, actions) => {\n  if(actions.type == 'USER_INPUT'){\n    return {value: actions.val, isValid: actions.val.includes('@')};\n  }\n  if(actions.type == 'USER_BLUR'){\n    return {value: state.value, isValid: state.value.includes('@')};\n  }\n  return {value: '', isValid: false};\n};\n\nconst passwordReducer = (state, actions) =>{\n  if(actions.type == 'USER_INPUT'){\n    return {value: actions.val, isValid: actions.val.trim().length > 6};\n  }\n  if(actions.type == 'USER_BLUR'){\n    return {value: state.value, isValid: state.value.trim().length > 6};\n  }\n  return {value: '', isValid: false};\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: null});\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value:'', isValid: null})\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 500);\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   passwordState.isValid && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'USER_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'USER_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","/Users/lalitkumar/code/user/src/components/MainHeader/MainHeader.js",[],"/Users/lalitkumar/code/user/src/components/Home/Home.js",[],"/Users/lalitkumar/code/user/src/components/MainHeader/Navigation.js",[],"/Users/lalitkumar/code/user/src/components/UI/Card/Card.js",[],"/Users/lalitkumar/code/user/src/components/UI/Button/Button.js",[],{"ruleId":"43","severity":1,"message":"44","line":8,"column":19,"nodeType":"45","messageId":"46","endLine":8,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":11,"column":19,"nodeType":"45","messageId":"46","endLine":11,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":18,"column":19,"nodeType":"45","messageId":"46","endLine":18,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":21,"column":19,"nodeType":"45","messageId":"46","endLine":21,"endColumn":21},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]